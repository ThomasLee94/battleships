{"version":3,"sources":["generated/src/services_pb.js","generated/src/services_grpc_web_pb.js","ui/components/Cell.js","ui/components/Grid.js","service/BattleShipService.js","ui/components/FireMissile.js","ui/components/CreateGame.js","ui/components/JoinGame.js","ui/components/InitPage.js","App.js","serviceWorker.js","index.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","battleshipservice","CreateGameRequest","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","name","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setName","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getName","length","writeString","setProto3StringField","CreateGameResponse","gameid","setGameid","setMessage","undefined","getGameid","getMessage","AddPlayerRequest","AddPlayerResponse","Board","repeatedFields_","boardList","getRepeatedField","readPackedInt32","setBoardList","getBoardList","writePackedInt32","setField","addBoard","opt_index","addToRepeatedField","clearBoardList","VerticalShip","start","stop","col","readInt32","setStart","setStop","setCol","getStart","writeInt32","getStop","getCol","setProto3IntField","HorizontalShip","row","setRow","getRow","ShowPlacedShipsRequest","boardid","setBoardid","getBoardid","ShowPlacedShipsResponse","vertshipList","toObjectList","getVertshipList","horshipList","getHorshipList","readMessage","addVertship","addHorship","writeRepeatedMessage","getRepeatedWrapperField","setVertshipList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearVertshipList","setHorshipList","clearHorshipList","FireMissileRequest","FireMissileResponse","status","readBool","setStatus","getStatus","writeBool","setProto3BooleanField","object","extend","exports","grpc","web","BoardServiceClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","BoardServicePromiseClient","methodDescriptor_BoardService_AddPlayer","MethodDescriptor","MethodType","UNARY","request","AbstractClientBase","MethodInfo","addPlayer","metadata","callback","rpcCall","unaryCall","methodDescriptor_BoardService_FireMissile","fireMissile","methodDescriptor_BoardService_ShowPlacedShips","showPlacedShips","methodDescriptor_BoardService_CreateGame","createGame","module","Cell","props","type","className","Grid","array","cells","map","cell","client","AddPlayerRPC","gameID","err","response","console","log","on","CreateGameRPC","ShowBoardRPC","getBoardId","FireMissileRPC","FireMissile","state","submitClick","bind","UpdateRow","UpdateCol","BattleShipService","event","persist","setState","target","onChange","UpdateRowStart","onClick","React","Component","CreateGame","UpdateName","startGame","JoinGame","UpdateGameId","InitPage","Square","squares","key","App","i","j","square","push","gameId","Boolean","window","location","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.96188f07.chunk.js","sourcesContent":["/* eslint-disable */\n\n /**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.battleshipservice.AddPlayerRequest', null, global);\ngoog.exportSymbol('proto.battleshipservice.AddPlayerResponse', null, global);\ngoog.exportSymbol('proto.battleshipservice.Board', null, global);\ngoog.exportSymbol('proto.battleshipservice.CreateGameRequest', null, global);\ngoog.exportSymbol('proto.battleshipservice.CreateGameResponse', null, global);\ngoog.exportSymbol('proto.battleshipservice.FireMissileRequest', null, global);\ngoog.exportSymbol('proto.battleshipservice.FireMissileResponse', null, global);\ngoog.exportSymbol('proto.battleshipservice.HorizontalShip', null, global);\ngoog.exportSymbol('proto.battleshipservice.ShowPlacedShipsRequest', null, global);\ngoog.exportSymbol('proto.battleshipservice.ShowPlacedShipsResponse', null, global);\ngoog.exportSymbol('proto.battleshipservice.VerticalShip', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.CreateGameRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.CreateGameRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.CreateGameRequest.displayName = 'proto.battleshipservice.CreateGameRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.CreateGameRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.CreateGameRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.CreateGameRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.CreateGameRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.CreateGameRequest}\n */\nproto.battleshipservice.CreateGameRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.CreateGameRequest;\n  return proto.battleshipservice.CreateGameRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.CreateGameRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.CreateGameRequest}\n */\nproto.battleshipservice.CreateGameRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.CreateGameRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.CreateGameRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.CreateGameRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.CreateGameRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.battleshipservice.CreateGameRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.CreateGameRequest.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.CreateGameResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.CreateGameResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.CreateGameResponse.displayName = 'proto.battleshipservice.CreateGameResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.CreateGameResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.CreateGameResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.CreateGameResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.CreateGameResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    gameid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.CreateGameResponse}\n */\nproto.battleshipservice.CreateGameResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.CreateGameResponse;\n  return proto.battleshipservice.CreateGameResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.CreateGameResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.CreateGameResponse}\n */\nproto.battleshipservice.CreateGameResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGameid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.CreateGameResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.CreateGameResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.CreateGameResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.CreateGameResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getGameid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string gameId = 1;\n * @return {string}\n */\nproto.battleshipservice.CreateGameResponse.prototype.getGameid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.CreateGameResponse.prototype.setGameid = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.battleshipservice.CreateGameResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.CreateGameResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.AddPlayerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.AddPlayerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.AddPlayerRequest.displayName = 'proto.battleshipservice.AddPlayerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.AddPlayerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.AddPlayerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.AddPlayerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.AddPlayerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    gameid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.AddPlayerRequest}\n */\nproto.battleshipservice.AddPlayerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.AddPlayerRequest;\n  return proto.battleshipservice.AddPlayerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.AddPlayerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.AddPlayerRequest}\n */\nproto.battleshipservice.AddPlayerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGameid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.AddPlayerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.AddPlayerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.AddPlayerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.AddPlayerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getGameid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string gameId = 1;\n * @return {string}\n */\nproto.battleshipservice.AddPlayerRequest.prototype.getGameid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.AddPlayerRequest.prototype.setGameid = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.battleshipservice.AddPlayerRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.AddPlayerRequest.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.AddPlayerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.AddPlayerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.AddPlayerResponse.displayName = 'proto.battleshipservice.AddPlayerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.AddPlayerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.AddPlayerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.AddPlayerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.AddPlayerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.AddPlayerResponse}\n */\nproto.battleshipservice.AddPlayerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.AddPlayerResponse;\n  return proto.battleshipservice.AddPlayerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.AddPlayerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.AddPlayerResponse}\n */\nproto.battleshipservice.AddPlayerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.AddPlayerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.AddPlayerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.AddPlayerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.AddPlayerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 2;\n * @return {string}\n */\nproto.battleshipservice.AddPlayerResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.AddPlayerResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.Board = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.battleshipservice.Board.repeatedFields_, null);\n};\ngoog.inherits(proto.battleshipservice.Board, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.Board.displayName = 'proto.battleshipservice.Board';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.battleshipservice.Board.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.Board.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.Board.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.Board} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.Board.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    boardList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.Board}\n */\nproto.battleshipservice.Board.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.Board;\n  return proto.battleshipservice.Board.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.Board} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.Board}\n */\nproto.battleshipservice.Board.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());\n      msg.setBoardList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.Board.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.Board.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.Board} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.Board.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBoardList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int32 board = 1;\n * @return {!Array<number>}\n */\nproto.battleshipservice.Board.prototype.getBoardList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array<number>} value */\nproto.battleshipservice.Board.prototype.setBoardList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n */\nproto.battleshipservice.Board.prototype.addBoard = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.battleshipservice.Board.prototype.clearBoardList = function() {\n  this.setBoardList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.VerticalShip = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.VerticalShip, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.VerticalShip.displayName = 'proto.battleshipservice.VerticalShip';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.VerticalShip.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.VerticalShip.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.VerticalShip} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.VerticalShip.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    start: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    stop: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    col: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.VerticalShip}\n */\nproto.battleshipservice.VerticalShip.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.VerticalShip;\n  return proto.battleshipservice.VerticalShip.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.VerticalShip} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.VerticalShip}\n */\nproto.battleshipservice.VerticalShip.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStart(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStop(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCol(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.VerticalShip.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.VerticalShip.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.VerticalShip} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.VerticalShip.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStart();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getStop();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getCol();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start = 1;\n * @return {number}\n */\nproto.battleshipservice.VerticalShip.prototype.getStart = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.VerticalShip.prototype.setStart = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 stop = 2;\n * @return {number}\n */\nproto.battleshipservice.VerticalShip.prototype.getStop = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.VerticalShip.prototype.setStop = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 col = 3;\n * @return {number}\n */\nproto.battleshipservice.VerticalShip.prototype.getCol = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.VerticalShip.prototype.setCol = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.HorizontalShip = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.HorizontalShip, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.HorizontalShip.displayName = 'proto.battleshipservice.HorizontalShip';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.HorizontalShip.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.HorizontalShip.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.HorizontalShip} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.HorizontalShip.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    start: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    stop: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    row: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.HorizontalShip}\n */\nproto.battleshipservice.HorizontalShip.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.HorizontalShip;\n  return proto.battleshipservice.HorizontalShip.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.HorizontalShip} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.HorizontalShip}\n */\nproto.battleshipservice.HorizontalShip.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStart(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStop(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRow(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.HorizontalShip.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.HorizontalShip.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.HorizontalShip} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.HorizontalShip.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStart();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getStop();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getRow();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start = 1;\n * @return {number}\n */\nproto.battleshipservice.HorizontalShip.prototype.getStart = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.HorizontalShip.prototype.setStart = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 stop = 2;\n * @return {number}\n */\nproto.battleshipservice.HorizontalShip.prototype.getStop = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.HorizontalShip.prototype.setStop = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int32 row = 3;\n * @return {number}\n */\nproto.battleshipservice.HorizontalShip.prototype.getRow = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.HorizontalShip.prototype.setRow = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.ShowPlacedShipsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.ShowPlacedShipsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.ShowPlacedShipsRequest.displayName = 'proto.battleshipservice.ShowPlacedShipsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.ShowPlacedShipsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.ShowPlacedShipsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.ShowPlacedShipsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.ShowPlacedShipsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    boardid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.ShowPlacedShipsRequest}\n */\nproto.battleshipservice.ShowPlacedShipsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.ShowPlacedShipsRequest;\n  return proto.battleshipservice.ShowPlacedShipsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.ShowPlacedShipsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.ShowPlacedShipsRequest}\n */\nproto.battleshipservice.ShowPlacedShipsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBoardid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.ShowPlacedShipsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.ShowPlacedShipsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.ShowPlacedShipsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.ShowPlacedShipsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBoardid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string boardId = 1;\n * @return {string}\n */\nproto.battleshipservice.ShowPlacedShipsRequest.prototype.getBoardid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.battleshipservice.ShowPlacedShipsRequest.prototype.setBoardid = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.ShowPlacedShipsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.battleshipservice.ShowPlacedShipsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.battleshipservice.ShowPlacedShipsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.ShowPlacedShipsResponse.displayName = 'proto.battleshipservice.ShowPlacedShipsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.battleshipservice.ShowPlacedShipsResponse.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.ShowPlacedShipsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.ShowPlacedShipsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.ShowPlacedShipsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    vertshipList: jspb.Message.toObjectList(msg.getVertshipList(),\n    proto.battleshipservice.VerticalShip.toObject, includeInstance),\n    horshipList: jspb.Message.toObjectList(msg.getHorshipList(),\n    proto.battleshipservice.HorizontalShip.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.ShowPlacedShipsResponse}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.ShowPlacedShipsResponse;\n  return proto.battleshipservice.ShowPlacedShipsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.ShowPlacedShipsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.ShowPlacedShipsResponse}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.battleshipservice.VerticalShip;\n      reader.readMessage(value,proto.battleshipservice.VerticalShip.deserializeBinaryFromReader);\n      msg.addVertship(value);\n      break;\n    case 2:\n      var value = new proto.battleshipservice.HorizontalShip;\n      reader.readMessage(value,proto.battleshipservice.HorizontalShip.deserializeBinaryFromReader);\n      msg.addHorship(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.ShowPlacedShipsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.ShowPlacedShipsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.ShowPlacedShipsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVertshipList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.battleshipservice.VerticalShip.serializeBinaryToWriter\n    );\n  }\n  f = message.getHorshipList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.battleshipservice.HorizontalShip.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated VerticalShip VertShip = 1;\n * @return {!Array<!proto.battleshipservice.VerticalShip>}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.getVertshipList = function() {\n  return /** @type{!Array<!proto.battleshipservice.VerticalShip>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.battleshipservice.VerticalShip, 1));\n};\n\n\n/** @param {!Array<!proto.battleshipservice.VerticalShip>} value */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.setVertshipList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.battleshipservice.VerticalShip=} opt_value\n * @param {number=} opt_index\n * @return {!proto.battleshipservice.VerticalShip}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.addVertship = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.battleshipservice.VerticalShip, opt_index);\n};\n\n\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.clearVertshipList = function() {\n  this.setVertshipList([]);\n};\n\n\n/**\n * repeated HorizontalShip HorShip = 2;\n * @return {!Array<!proto.battleshipservice.HorizontalShip>}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.getHorshipList = function() {\n  return /** @type{!Array<!proto.battleshipservice.HorizontalShip>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.battleshipservice.HorizontalShip, 2));\n};\n\n\n/** @param {!Array<!proto.battleshipservice.HorizontalShip>} value */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.setHorshipList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.battleshipservice.HorizontalShip=} opt_value\n * @param {number=} opt_index\n * @return {!proto.battleshipservice.HorizontalShip}\n */\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.addHorship = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.battleshipservice.HorizontalShip, opt_index);\n};\n\n\nproto.battleshipservice.ShowPlacedShipsResponse.prototype.clearHorshipList = function() {\n  this.setHorshipList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.FireMissileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.FireMissileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.FireMissileRequest.displayName = 'proto.battleshipservice.FireMissileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.FireMissileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.FireMissileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.FireMissileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.FireMissileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    col: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    row: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.FireMissileRequest}\n */\nproto.battleshipservice.FireMissileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.FireMissileRequest;\n  return proto.battleshipservice.FireMissileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.FireMissileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.FireMissileRequest}\n */\nproto.battleshipservice.FireMissileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCol(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRow(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.FireMissileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.FireMissileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.FireMissileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.FireMissileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCol();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getRow();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 col = 1;\n * @return {number}\n */\nproto.battleshipservice.FireMissileRequest.prototype.getCol = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.FireMissileRequest.prototype.setCol = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 row = 2;\n * @return {number}\n */\nproto.battleshipservice.FireMissileRequest.prototype.getRow = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.battleshipservice.FireMissileRequest.prototype.setRow = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.battleshipservice.FireMissileResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.battleshipservice.FireMissileResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.battleshipservice.FireMissileResponse.displayName = 'proto.battleshipservice.FireMissileResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.battleshipservice.FireMissileResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.battleshipservice.FireMissileResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.battleshipservice.FireMissileResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.FireMissileResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.battleshipservice.FireMissileResponse}\n */\nproto.battleshipservice.FireMissileResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.battleshipservice.FireMissileResponse;\n  return proto.battleshipservice.FireMissileResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.battleshipservice.FireMissileResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.battleshipservice.FireMissileResponse}\n */\nproto.battleshipservice.FireMissileResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.battleshipservice.FireMissileResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.battleshipservice.FireMissileResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.battleshipservice.FireMissileResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.battleshipservice.FireMissileResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool status = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.battleshipservice.FireMissileResponse.prototype.getStatus = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.battleshipservice.FireMissileResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.battleshipservice);\n","/* eslint-disable */\n\n /**\n * @fileoverview gRPC-Web generated client stub for battleshipservice\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.battleshipservice = require('./services_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.battleshipservice.BoardServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.battleshipservice.BoardServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.battleshipservice.AddPlayerRequest,\n *   !proto.battleshipservice.AddPlayerResponse>}\n */\nconst methodDescriptor_BoardService_AddPlayer = new grpc.web.MethodDescriptor(\n  '/battleshipservice.BoardService/AddPlayer',\n  grpc.web.MethodType.UNARY,\n  proto.battleshipservice.AddPlayerRequest,\n  proto.battleshipservice.AddPlayerResponse,\n  /** @param {!proto.battleshipservice.AddPlayerRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.AddPlayerResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.battleshipservice.AddPlayerRequest,\n *   !proto.battleshipservice.AddPlayerResponse>}\n */\nconst methodInfo_BoardService_AddPlayer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.battleshipservice.AddPlayerResponse,\n  /** @param {!proto.battleshipservice.AddPlayerRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.AddPlayerResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.battleshipservice.AddPlayerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.battleshipservice.AddPlayerResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.battleshipservice.AddPlayerResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.battleshipservice.BoardServiceClient.prototype.addPlayer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/battleshipservice.BoardService/AddPlayer',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_AddPlayer,\n      callback);\n};\n\n\n/**\n * @param {!proto.battleshipservice.AddPlayerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.battleshipservice.AddPlayerResponse>}\n *     A native promise that resolves to the response\n */\nproto.battleshipservice.BoardServicePromiseClient.prototype.addPlayer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/battleshipservice.BoardService/AddPlayer',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_AddPlayer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.battleshipservice.FireMissileRequest,\n *   !proto.battleshipservice.FireMissileResponse>}\n */\nconst methodDescriptor_BoardService_FireMissile = new grpc.web.MethodDescriptor(\n  '/battleshipservice.BoardService/FireMissile',\n  grpc.web.MethodType.UNARY,\n  proto.battleshipservice.FireMissileRequest,\n  proto.battleshipservice.FireMissileResponse,\n  /** @param {!proto.battleshipservice.FireMissileRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.FireMissileResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.battleshipservice.FireMissileRequest,\n *   !proto.battleshipservice.FireMissileResponse>}\n */\nconst methodInfo_BoardService_FireMissile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.battleshipservice.FireMissileResponse,\n  /** @param {!proto.battleshipservice.FireMissileRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.FireMissileResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.battleshipservice.FireMissileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.battleshipservice.FireMissileResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.battleshipservice.FireMissileResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.battleshipservice.BoardServiceClient.prototype.fireMissile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/battleshipservice.BoardService/FireMissile',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_FireMissile,\n      callback);\n};\n\n\n/**\n * @param {!proto.battleshipservice.FireMissileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.battleshipservice.FireMissileResponse>}\n *     A native promise that resolves to the response\n */\nproto.battleshipservice.BoardServicePromiseClient.prototype.fireMissile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/battleshipservice.BoardService/FireMissile',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_FireMissile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.battleshipservice.ShowPlacedShipsRequest,\n *   !proto.battleshipservice.ShowPlacedShipsResponse>}\n */\nconst methodDescriptor_BoardService_ShowPlacedShips = new grpc.web.MethodDescriptor(\n  '/battleshipservice.BoardService/ShowPlacedShips',\n  grpc.web.MethodType.UNARY,\n  proto.battleshipservice.ShowPlacedShipsRequest,\n  proto.battleshipservice.ShowPlacedShipsResponse,\n  /** @param {!proto.battleshipservice.ShowPlacedShipsRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.ShowPlacedShipsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.battleshipservice.ShowPlacedShipsRequest,\n *   !proto.battleshipservice.ShowPlacedShipsResponse>}\n */\nconst methodInfo_BoardService_ShowPlacedShips = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.battleshipservice.ShowPlacedShipsResponse,\n  /** @param {!proto.battleshipservice.ShowPlacedShipsRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.ShowPlacedShipsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.battleshipservice.ShowPlacedShipsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.battleshipservice.ShowPlacedShipsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.battleshipservice.ShowPlacedShipsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.battleshipservice.BoardServiceClient.prototype.showPlacedShips =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/battleshipservice.BoardService/ShowPlacedShips',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_ShowPlacedShips,\n      callback);\n};\n\n\n/**\n * @param {!proto.battleshipservice.ShowPlacedShipsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.battleshipservice.ShowPlacedShipsResponse>}\n *     A native promise that resolves to the response\n */\nproto.battleshipservice.BoardServicePromiseClient.prototype.showPlacedShips =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/battleshipservice.BoardService/ShowPlacedShips',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_ShowPlacedShips);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.battleshipservice.CreateGameRequest,\n *   !proto.battleshipservice.CreateGameResponse>}\n */\nconst methodDescriptor_BoardService_CreateGame = new grpc.web.MethodDescriptor(\n  '/battleshipservice.BoardService/CreateGame',\n  grpc.web.MethodType.UNARY,\n  proto.battleshipservice.CreateGameRequest,\n  proto.battleshipservice.CreateGameResponse,\n  /** @param {!proto.battleshipservice.CreateGameRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.CreateGameResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.battleshipservice.CreateGameRequest,\n *   !proto.battleshipservice.CreateGameResponse>}\n */\nconst methodInfo_BoardService_CreateGame = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.battleshipservice.CreateGameResponse,\n  /** @param {!proto.battleshipservice.CreateGameRequest} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.battleshipservice.CreateGameResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.battleshipservice.CreateGameRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.battleshipservice.CreateGameResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.battleshipservice.CreateGameResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.battleshipservice.BoardServiceClient.prototype.createGame =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/battleshipservice.BoardService/CreateGame',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_CreateGame,\n      callback);\n};\n\n\n/**\n * @param {!proto.battleshipservice.CreateGameRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.battleshipservice.CreateGameResponse>}\n *     A native promise that resolves to the response\n */\nproto.battleshipservice.BoardServicePromiseClient.prototype.createGame =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/battleshipservice.BoardService/CreateGame',\n      request,\n      metadata || {},\n      methodDescriptor_BoardService_CreateGame);\n};\n\n\nmodule.exports = proto.battleshipservice;\n","import React from 'react'\nimport './Cell.css'\n\nfunction Cell(props) {\n  const { type } = props\n    \n  return (\n    <div className=\"Cell\">\n      {type}\n    </div>\n  )\n  \n}\n\nexport default Cell","import React from 'react'\nimport Cell from './Cell'\nimport './Grid.css'\n\nfunction Grid(props) {\n  const { cells } = props\n\n  const array = cells.map((cell) => <Cell type={cell.type} />)\n\n  return (\n    <div className=\"Grid\">\n      {array}\n    </div>\n  )\n}\n\nexport default Grid","/* eslint-disabled */\n//@ts-nocheck\n\nimport { BoardServiceClient } from '../generated/src/services_grpc_web_pb';\nimport {\n  CreateGameRequest, CreateGameResponse,\n  AddPlayerRequest, AddPlayerResponse, \n  ShowPlacedShipsRequest, ShowPlacedShipsReponse, \n  FireMissileRequest, FireMissileResponse\n} from '../generated/src/services_pb'\n\nconst client = new BoardServiceClient('http://localhost:8080', null, null);\n\nfunction CreateGameRPC(name, callback) {\n  const request = new CreateGameRequest();\n\n  const call = client.createGame(request, {'custom-header-1': 'value1'},\n  (err, response) => {\n    if(err) {\n      console.log(err)\n    }\n    return AddPlayerRPC(response.getGameid(), name, callback)\n\n  });\n  call.on('status', (status) => {\n  });\n}\n\nfunction AddPlayerRPC(gameID, name, callback) {\n  const request = new AddPlayerRequest();\n  request.setGameid(gameID);\n  request.setName(name);\n\n  const call = client.addPlayer(request, {'custom-header-1': 'value1'},\n  (err, response) => {\n    if(err) {\n      console.log(err)\n    }\n    console.log(response.getMessage());\n    console.log(name);\n    return callback(gameID, name)\n  });\n  call.on('status', (status) => {\n    console.log(status)\n  // ...\n  });\n}\n\nfunction ShowBoardRPC(row, col) {\n  const request = new ShowPlacedShipsRequest();\n  let boardId = request.getBoardId()\n  \n  const call = client.showPlacedShips(request, {'custom-header-1': 'value1'},\n(err, response) => {\n  if(err) {\n    console.log(err)\n  }\n  console.log(response.getStatus());\n});\ncall.on('status', (status) => {\n// ...\n});\n  \n  console.log('yeet in show board rpc')\n  return \n}\n\n\nfunction FireMissileRPC(row, col) {\n  const request = new FireMissileRequest();\n  request.setRow()\n  request.setCol()\n  console.log(row, col)\n  const call = client.fireMissile(request, {'custom-header-1': 'value1'},\n(err, response) => {\n  if(err) {\n    console.log(err)\n  }\n  console.log(response.getStatus());\n});\ncall.on('status', (status) => {\n// ...\n});\n  \n  console.log('yeet')\n  return \n}\n\nexport default {\n  CreateGameRPC,\n  AddPlayerRPC,\n  ShowBoardRPC,\n  FireMissileRPC,\n}","import React from 'react'\nimport {BattleShipService} from '../../service'\nimport './FireMissile.css'\n\nclass FireMissile extends React.Component {\n    constructor(props) {\n        super(props);\n          this.state = {\n            row: 0,\n            col: 0\n          };\n\n          this.submitClick = this.submitClick.bind(this)\n          this.UpdateRow = this.UpdateRow.bind(this)\n          this.UpdateCol = this.UpdateCol.bind(this)\n        }\n\n    submitClick() {\n        const {row, col} = this.state\n        BattleShipService.FireMissileRPC(row, col)\n        // clear state\n        console.log(\"Clicked\")\n    }\n\n    UpdateRow(event) {\n        event.persist()\n        console.log(event)\n        this.setState(state => ({\n            row: event.target.value\n        }))\n    }\n\n   \n    UpdateCol(event) {\n        event.persist()\n        this.setState(state => ({\n            col: event.target.value\n        }))\n    }\n\n    render() {\n        return (\n        <div className=\"FireMissile\">\n            <label >\n                row \n                <input onChange={this.UpdateRowStart} type=\"text\" name=\"row-start\"/>\n            </label>\n            <label >\n                col\n                <input onChange={this.UpdateCol} type=\"text\" name=\"row-start\"/>\n            </label>\n            <button onClick={this.submitClick} className=\"button\"> Submit</button>\n        </div>\n        )\n    }\n}\n\nexport default FireMissile","import React from 'react'\nimport {BattleShipService} from '../../service'\nimport './CreateGame.css'\n\nclass CreateGame extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\"\n        }\n\n          this.submitClick = this.submitClick.bind(this)\n          this.UpdateName = this.UpdateName.bind(this)\n        }\n\n    submitClick() {\n        BattleShipService.CreateGameRPC(this.state.name, this.props.startGame)\n        console.log(\"Clicked\")\n    }\n\n    UpdateName(event) {\n        event.persist()\n        console.log(event)\n        this.setState(state => ({\n            name: event.target.value\n        }))\n    }\n\n    render() {\n        return (\n        <div className=\"CreateGame\">\n            <label className=\"label\">\n                Your name    \n                <input className=\"input\" onChange={this.UpdateRowStart} type=\"text\" />\n            </label>\n            <button onClick={this.submitClick} className=\"button\"> Create Game Room</button>\n        </div>\n        )\n    }\n}\n\nexport default CreateGame\n","import React from 'react'\nimport {BattleShipService} from '../../service'\nimport './CreateGame.css'\n\nclass JoinGame extends React.Component {\n    constructor(props) {\n        super(props);\n          this.state = {\n            gameID: \"\"\n          };\n\n          this.submitClick = this.submitClick.bind(this)\n          this.UpdateGameId = this.UpdateGameId.bind(this)\n        }\n\n    submitClick() {\n        const {gameID} = this.state\n        BattleShipService.AddPlayerRPC(this.props.name, gameID, this.props.startGame)\n        console.log(\"Clicked\")\n    }\n\n    UpdateGameId(event) {\n        event.persist()\n        console.log(event)\n        this.setState(state => ({\n            gameID: event.target.value\n        }))\n    }\n\n    render() {\n        return (\n        <div className=\"CreateGame\">\n            <label className=\"label\">\n                Game ID\n                <input className=\"input\" onChange={this.UpdateGameId} type=\"text\" />\n            </label>\n            <button onClick={this.submitClick} className=\"button\"> Submit</button>\n        </div>\n        )\n    }\n}\n\nexport default JoinGame\n","import React from 'react'\nimport CreateGame from './CreateGame'\nimport JoinGame from './JoinGame'\nimport './InitPage.css'\n\nclass InitPage extends React.Component {\n    constructor(props) {\n        super(props) \n    }\n\n    render() {\n        return (\n            <div className=\"InitPage\">\n                <h2>Welcome to Battleships!</h2>\n                <h4>Either create a new game, or submit the Game ID to join a friends game!</h4>\n                <CreateGame  {...this.props} />\n                <JoinGame {...this.props}/>\n            </div>\n        )   \n    }\n}\n\nexport default InitPage\n","import React, { Component } from 'react';\n\nimport Grid from './ui/components/Grid';\nimport FireMissile from './ui/components/FireMissile'\nimport InitPage from './ui/components/InitPage'\n\nclass Square {\n  squares = 0;\n  constructor(type) {\n    Square.squares += 1;\n    this.key = Square.squares\n    this.type = type\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    \n    super()\n    const cells = []\n\n    for (let i = 0; i < 10; i += 1) {\n      let row = i+1\n      for (let j = 0; j < 10; j += 1) {\n        let col = j+1\n        const type = col + \":\" + row\n        const square = new Square(type)\n        cells.push(square)\n      }\n    }\n\n    this.state = {\n      cells,\n      gameID: \"\",\n      name: \"\"\n    }\n\n    this.startGame = this.startGame.bind(this)\n  }\n\n  startGame(name, gameId) {\n    this.setState({\n      gameID: gameId,\n      name: name\n    })\n  }\n\n  render() {\n    if (this.state.gameID.length > 1) {\n      return(\n        <div className=\"App\">\n            <h2>col:row</h2>\n            <FireMissile />\n            <Grid cells={this.state.cells} />\n            <Grid cells={this.state.cells} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <InitPage startGame={this.startGame} />\n        </div>\n      );\n\n    }\n    \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}